<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cn.sduonline</groupId>
    <artifactId>sdu_lantern_festival_2021</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sdu_lantern_festival_2021</name>
    <description>SDUOnline Back-end Project for 2021 Lantern Festival Activity</description>

    <properties>
        <!-- Java版本配置（使用Java11） -->
        <java.version>11</java.version>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.9.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.13.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>

        <!-- Redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <!-- debug血泪史：用带starter那个mybatis…… -->
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.4</version>
        </dependency>
    </dependencies>

    <!-- 配置阿里云maven镜像 -->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>

    <!-- 配置阿里云maven镜像 -->
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://maven.aliyun.com/repository/public</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- 不同环境下的不同配置文件 -->
    <profiles>
        <!-- 本地开发环境 -->
        <profile>
            <id>develop</id>
            <properties>
                <springboot.active-environment>develop</springboot.active-environment>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 服务器环境 -->
        <profile>
            <id>release</id>
            <properties>
                <springboot.active-environment>release</springboot.active-environment>
            </properties>
        </profile>
    </profiles>

    <build>
        <!-- 打包时，需要额外打包那些资源 -->
        <resources>
            <resource>
                <!--
                    directory用于指定存储资源的根目录。
                    注:其路径是(相对于POM文件的)相对路径。
                    注:如果只写一个directory的话，那么会默认include其下面的所有资源。
                -->
                <directory>src/main/resources</directory>
                <!--
                    Whether resources are filtered to replace tokens with parameterised values or not.
                    是否过滤资源,用pom中的对应值替换文件中的对应占位符
                    注:在spring-boot-starter-parent的pom文件中，将读取pom.xml文件数据的占位符替换为了@，
                    使用时通过@key@获取key对应的value即可
                 -->
                <filtering>true</filtering>
                <!--
                    先把其他所有的排除掉，除了application.yml，
                    然后再在下面的resource里面，根据不同的maven profile激活情况，引入相应的资源文件进来
                -->
                <excludes>
                    <exclude>application-*.yml</exclude>
                </excludes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>application-${springboot.active-environment}.yml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
